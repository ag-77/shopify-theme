{%- comment -%}

  # Example:
  {%- render 'responsive-image',
    responsive_image: article.image,
    responsive_image_alt: article.title,
    responsive_image_size: "2000x2000",
    responsive_image_sizes_arr: "360x360|425x425|768x768|1024x1024|1440x1440",
    responsive_image_breakpoints_arr: "360|425|768|1024|1440",
    responsive_image_crop: "center"
  -%}

  # Required parameters:
    responsive_image: image.object
      The image to render
    responsive_image_alt: ""
      The alt text
    responsive_image_size: "100x100"
      The rendering size as "width x height": "100x" / "100x100" / "x100"
      Both width and height are preferred, combined with responsive_image_crop: "center"
      https://shopify.dev/docs/themes/liquid/reference/filters/url-filters#size-parameters

  # Optional parameters:
    responsive_image_breakpoints_arr: ""
      Pipe-separated array with breakpoints: "360|425|768|1024|1440"
      Requires responsive_image_sizes_arr to create sized sources with MAX-WIDTH
    responsive_image_sizes_arr:
      Pipe-separated array with rendering sizes per breakpoint: "360x360|425x425|768x768|1024x1024|1440x1440"
    responsive_image_crop: ""
      Set to 'center / top / left / right / bottom' to crop the image with the specified size.
      Requires both height and width in responsive_image_size
    responsive_image_class: ""
      Set to 'img--contain' or 'img--cover' to resize the image accordingly
      (or img--left, img--right, img--fill, img--centered, img--border)
    responsive_image_type: ""
      Can be set to "file" or "asset" for a file_img_url or an asset_img_url filter
    responsive_image_data: ""
      Data-attributes for js
    responsive_image_size_lazyload: "16x16"
      Small image size for blurred layloading
    responsive_image_lazy: true
      Enable lazy loading
    responsive_image_aria_label: ""
      Add an aria label to the image
    responsive_image_caption: ""
      Add a figcaption

{%- endcomment -%}

{%- comment -%} Defaults {%- endcomment -%}
{%- unless responsive_image_size -%}
  {%- assign responsive_image_size = '100x100' -%}
{%- endunless -%}

{%- unless responsive_image_type -%}
  {%- assign responsive_image_type = '' -%}
{%- endunless -%}

{%- comment -%} Set responsive_image_lazy default to true {%- endcomment -%}
{%- unless responsive_image_lazy -%}
  {%- assign responsive_image_lazy = true -%}
{%- endunless -%}

{%- comment -%} Show the user a preload image {%- endcomment -%}
{%- if responsive_image_lazy and responsive_image_size_lazyload == blank -%}
  {%- assign responsive_image_size_lazyload = '16x16' -%}
{%- endif -%}

{%- assign responsive_image_obj = responsive_image -%}

{%- comment -%} Handle no image {%- endcomment -%}
{%- if responsive_image_obj == blank or responsive_image_obj == 'notfound' -%}
  {%- assign responsive_image_obj = 'no-image.gif' -%}
  {%- assign responsive_image_type = 'asset' -%}
{%- endif -%}

{%- comment -%} Create arrays of breakpoints and image sizes {%- endcomment -%}
{%- assign theImage_breakpoints_arr = responsive_image_breakpoints_arr | split: '|' -%}
{%- assign theImage_sizes_arr = responsive_image_sizes_arr | split: '|' -%}
{%- assign theImage_crops_arr = theImage_sizes_arr -%}

{%- comment -%} Set ratio class {%- endcomment -%}
{%- assign responsive_image_ratio = 'img--1x1' -%}
{%- if responsive_image.aspect_ratio > 1 -%}
  {%- assign responsive_image_ratio = 'img--landscape' -%}
{%- endif -%}
{%- if responsive_image.aspect_ratio < 1 -%}
  {%- assign responsive_image_ratio = 'img--portrait' -%}
{%- endif -%}

{%- comment %} Calculate width and height attributes {% endcomment -%}
{%- assign image_height = "" -%}
{%- assign image_width = "" -%}
{%- assign size_parts = responsive_image_size | split: 'x' -%}
{%- if size_parts[0] != blank -%}
  {%- capture image_width %} width="{{ size_parts[0] }}"{%- endcapture -%}
{%- endif -%}
{%- if size_parts[1] != blank -%}
  {%- capture image_height %} height="{{ size_parts[1] }}"{%- endcapture -%}
{%- endif -%}

{% comment %} Capture title {% endcomment %}
{%- capture image_title -%}
  {%- unless responsive_image_title == blank -%}
    title="{{ responsive_image_title }}"
  {%- endunless -%}
{%- endcapture -%}

{%- comment %} Render image source from FILES {% endcomment -%}
{%- if responsive_image_type == 'file' -%}

  {%- comment -%} Capture extra sources from breakpoints {%- endcomment -%}
  {%- capture image_sources -%}
    {%- if theImage_breakpoints_arr.size > 0 -%}

      {% comment %} Create source for each breakpoint {% endcomment %}
      {%- for theImage_breakpoint in theImage_breakpoints_arr -%}
        {%- assign theImage_breakpoint_size = theImage_sizes_arr[forloop.index0] | strip -%}
        {%- assign theImage_breakpoint_crop = theImage_crops_arr[forloop.index0] | strip -%}
        <source media="(max-width: {{ theImage_breakpoint }}px)" {% if responsive_image_lazy %}srcset="{{ responsive_image_obj | file_img_url: responsive_image_size_lazyload, crop: responsive_image_crop }}" data-{% endif %}srcset="{{ responsive_image_obj | file_img_url: theImage_breakpoint_size, crop: responsive_image_crop }}">
      {%- endfor %}

      {% comment %} Create source for print {% endcomment %}
      <source media="print" srcset="{{ responsive_image_obj | file_img_url: responsive_image_size, crop: responsive_image_crop }}">
    {%- endif -%}
  {%- endcapture -%}

  {% comment %} Capture image source {% endcomment %}
  {%- capture image_src -%}

    {% comment %} Lazy loading {% endcomment %}
    {% if responsive_image_lazy -%}
      loading="lazy"
      class="lazyload"
      src="{{ responsive_image_obj | file_img_url: responsive_image_size_lazyload, crop: responsive_image_crop }}"

      {% comment %} data-srcset for breakpoints {% endcomment %}
      {% if theImage_breakpoints_arr.size > 0 %}
        data-srcset="
        {%- for theImage_breakpoint in theImage_breakpoints_arr -%}
          {%- assign theImage_breakpoint_size = theImage_sizes_arr[forloop.index0] | strip -%}
          {{ responsive_image_obj | file_img_url: theImage_breakpoint_size, crop: responsive_image_crop }} {{ theImage_breakpoint }}w
          {%- unless forloop.last -%}
          ,
          {% endunless -%}
        {%- endfor -%}
        "

      {% comment %} data-src for no breakpoints {% endcomment %}
      {% else %}
        data-src="{{ responsive_image_obj | file_img_url: responsive_image_size, crop: responsive_image_crop }}"
      {% endif %}

    {% comment %} No lazy loading {% endcomment %}
    {% else %}
      src="{{ responsive_image_obj | file_img_url: responsive_image_size, crop: responsive_image_crop }}"
    {% endif %}
  {%- endcapture -%}

{%- comment %} Render image source from ASSETS {% endcomment -%}
{%- elsif responsive_image_type == 'asset' -%}


  {%- comment -%} Capture extra sources from breakpoints {%- endcomment -%}
  {%- capture image_sources -%}
    {%- if theImage_breakpoints_arr.size > 0 -%}

      {% comment %} Create source for each breakpoint {% endcomment %}
      {%- for theImage_breakpoint in theImage_breakpoints_arr -%}
        {%- assign theImage_breakpoint_size = theImage_sizes_arr[forloop.index0] | strip -%}
        {%- assign theImage_breakpoint_crop = theImage_crops_arr[forloop.index0] | strip -%}
        <source media="(max-width: {{ theImage_breakpoint }}px)" {% if responsive_image_lazy %}srcset="{{ responsive_image_obj | asset_img_url: responsive_image_size_lazyload, crop: responsive_image_crop }}" data-{% endif %}srcset="{{ responsive_image_obj | asset_img_url: theImage_breakpoint_size, crop: responsive_image_crop }}">
      {%- endfor %}

      {% comment %} Create source for print {% endcomment %}
      <source media="print" srcset="{{ responsive_image_obj | asset_img_url: responsive_image_size, crop: responsive_image_crop }}">
    {%- endif -%}
  {%- endcapture -%}

  {% comment %} Capture image source {% endcomment %}
  {%- capture image_src -%}

    {% comment %} Lazy loading {% endcomment %}
    {% if responsive_image_lazy -%}
      loading="lazy"
      class="lazyload"
      src="{{ responsive_image_obj | asset_img_url: responsive_image_size_lazyload, crop: responsive_image_crop }}"

      {% comment %} data-srcset for breakpoints {% endcomment %}
      {% if theImage_breakpoints_arr.size > 0 %}
        data-srcset="
        {%- for theImage_breakpoint in theImage_breakpoints_arr -%}
          {%- assign theImage_breakpoint_size = theImage_sizes_arr[forloop.index0] | strip -%}
          {{ responsive_image_obj | asset_img_url: theImage_breakpoint_size, crop: responsive_image_crop }} {{ theImage_breakpoint }}w
          {%- unless forloop.last -%}
          ,
          {% endunless -%}
        {%- endfor -%}
        "

      {% comment %} data-src for no breakpoints {% endcomment %}
      {% else %}
        data-src="{{ responsive_image_obj | asset_img_url: responsive_image_size, crop: responsive_image_crop }}"
      {% endif %}

    {% comment %} No lazy loading {% endcomment %}
    {% else %}
      src="{{ responsive_image_obj | asset_img_url: responsive_image_size, crop: responsive_image_crop }}"
    {% endif %}
  {%- endcapture -%}

{%- comment %} Render image source from product-, variant-, line_item-, collection-, article- or image object {% endcomment -%}
{%- else -%}

  {%- comment -%} Capture extra sources from breakpoints {%- endcomment -%}
  {%- capture image_sources -%}
    {%- if theImage_breakpoints_arr.size > 0 -%}

      {% comment %} Create source for each breakpoint {% endcomment %}
      {%- for theImage_breakpoint in theImage_breakpoints_arr -%}
        {%- assign theImage_breakpoint_size = theImage_sizes_arr[forloop.index0] | strip -%}
        {%- assign theImage_breakpoint_crop = theImage_crops_arr[forloop.index0] | strip -%}
        <source media="(max-width: {{ theImage_breakpoint }}px)" {% if responsive_image_lazy %}srcset="{{ responsive_image_obj | img_url: responsive_image_size_lazyload, crop: responsive_image_crop }}" data-{% endif %}srcset="{{ responsive_image_obj | img_url: theImage_breakpoint_size, crop: responsive_image_crop }}">
      {%- endfor %}

      {% comment %} Create source for print {% endcomment %}
      <source media="print" srcset="{{ responsive_image_obj | img_url: responsive_image_size, crop: responsive_image_crop }}">
    {%- endif -%}
  {%- endcapture -%}

  {% comment %} Capture image source {% endcomment %}
  {%- capture image_src -%}

    {% comment %} Lazy loading {% endcomment %}
    {% if responsive_image_lazy -%}
      loading="lazy"
      class="lazyload"
      src="{{ responsive_image_obj | img_url: responsive_image_size_lazyload, crop: responsive_image_crop }}"

      {% comment %} data-srcset for breakpoints {% endcomment %}
      {% if theImage_breakpoints_arr.size > 0 %}
        data-srcset="
        {%- for theImage_breakpoint in theImage_breakpoints_arr -%}
          {%- assign theImage_breakpoint_size = theImage_sizes_arr[forloop.index0] | strip -%}
          {{ responsive_image_obj | img_url: theImage_breakpoint_size, crop: responsive_image_crop }} {{ theImage_breakpoint }}w
          {%- unless forloop.last -%}
          ,
          {% endunless -%}
        {%- endfor -%}
        "

      {% comment %} data-src for no breakpoints {% endcomment %}
      {% else %}
        data-src="{{ responsive_image_obj | img_url: responsive_image_size, crop: responsive_image_crop }}"
      {% endif %}

    {% comment %} No lazy loading {% endcomment %}
    {% else %}
      src="{{ responsive_image_obj | img_url: responsive_image_size, crop: responsive_image_crop }}"
    {% endif %}
  {%- endcapture -%}

{%- endif -%}


{%- comment -%} Render the image {%- endcomment -%}
<figure class="img img--responsive {{ responsive_image_class }} {{ responsive_image_ratio }}">
  <picture>
    {{ image_sources }}
    <img alt="{{ responsive_image_alt }}"
      {{ image_width }}
      {{ image_height }}
      {{ image_src }}
      {{ image_title }}
      {{ responsive_image_aria_label -}}
      {{ responsive_image_data -}}
    >
    {%- if responsive_image_caption != blank -%}
      <figcaption>
        {{- responsive_image_caption -}}
      </figcaption>
    {%- endif -%}
  </picture>
</figure>
